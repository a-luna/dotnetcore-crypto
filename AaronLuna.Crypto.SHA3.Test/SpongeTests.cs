namespace AaronLuna.Crypto.SHA3.Test
{
    using System.IO;
    using System.Text;

    using SHA3;

    static class SpongeTests
	{
        internal static BitString Message0 => new BitString();

        internal static BitString Message5 => new BitString("11001");

        internal static BitString Message30 => new BitString("110010100001101011011110100110");

        internal static BitString Message1600 => new BitString

        internal static BitString Message1605 => new BitString

        internal static BitString Message1630 => new BitString

        internal static BitString Message24 => new BitString(Encoding.ASCII.GetBytes("abc"));

        internal static BitString Message448 => new BitString(Encoding.ASCII.GetBytes("abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"));

        internal static BitString Message896 => new BitString(Encoding.ASCII.GetBytes("abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"));

        internal static BitString Message8M => new BitString(Encoding.ASCII.GetBytes(new string('a', 1000 * 1000)));

        internal static Stream GetStream8M()
        {
			var count = 1000;
			var stream = new MemoryStream(count * count);
			var buffer = Encoding.ASCII.GetBytes(new string('a', count));

			for (var i = 0; i < count; i++)
			{
				stream.Write(buffer, 0, count);
			}

			return stream;
		}        
	}
}
